#!/bin/bash
# RTNET custom startup script
# Configuration for Slave

#
# Ethernet card driver
#
NETDRV="e1000"

#
# IP configuration
#
IP="10.0.0.100"
NETMASK="255.255.255.0"
MASTER_IP="10.0.0.1"
MASTER_MAC="00:1B:21:D3:08:35"

#
# Cycles and slots
#
SLOT_START=100
SLOT_END=2400
SLOT_OFFSET=100
NUM_SLOTS=$(( ($SLOT_END - $SLOT_START) / ($SLOT_OFFSET) ))

#
# Enable capture
#
EN_CAP="no"

#
# RTNET location
#
PREFIX="/usr/local/rtnet"


# Initialize RTNET loading kernel modules
init_rtnet() {
  # Remove non-RT module if present
  if [ "`lsmod | grep $NETDRV`" != "" ]; then
    echo " = Remove network modules..."
    modprobe -r $NETDRV
  fi
  echo " = Loading modules..."
  insmod $PREFIX/modules/rtnet.ko || exit 1
  insmod $PREFIX/modules/rtipv4.ko || exit 1
  insmod $PREFIX/modules/rt_$NETDRV.ko || exit 1
  insmod $PREFIX/modules/rtudp.ko || exit 1
  insmod $PREFIX/modules/rtpacket.ko || exit 1

  if [ $EN_CAP = "yes" ]; then
    insmod $PREFIX/modules/rtcap.ko || exit 1
    ifconfig rteth0 up
    ifconfig rteth0-mac up
  fi

  # Bring rteth0 up before loading TDMA
  echo " = Bringing rteth0 up..."
  $RTIFCONFIG rteth0 up $IP netmask $NETMASK

  sleep 5

  echo " = Loading TDMA modules..."
  insmod $PREFIX/modules/rtmac.ko
  insmod $PREFIX/modules/tdma.ko
}


case "$1" in
  start)
    init_rtnet
    echo " = Adding routes..."
    $RTROUTE add $MASTER_IP $MASTER_MAC dev rteth0
    echo " = Configuring TDMA slave..."
    $TDMACFG rteth0 slave -c 100 -i 63
    echo " = Configuring ${NUM_SLOTS} slots..."
    sleep 5
    for i in $(seq 0 $NUM_SLOTS)
    do
      OFFSET=$(( $SLOT_START + ($SLOT_OFFSET * $i) ))
      echo " * Adding slot $i at offset $OFFSET..."
      if [ $i = "0" ]; then
        $TDMACFG rteth0 slot $i $OFFSET -p 1/1 -s 1500 -t 1000000000
      else
        $TDMACFG rteth0 slot $i $OFFSET -p 1/1 -s 1500 -j 0 -t 1000000000
      fi
    done
    echo " = Configuration done.."
    ;;

  stop)
    ifconfig rteth0 down 2>/dev/null
    ifconfig rteth0-mac down 2>/dev/null
    $RTIFCONFIG rteth0 down 2>/dev/null
    rmmod tdma rtmac rtcap rt_$NETDRV rtpacket rtudp rtipv4 rtnet 2>/dev/null
    ;;

  *)
    echo "Wrong command!"
esac
